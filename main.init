(setq create-lockfiles nil)
(setq make-backup-files nil)

(setq inhibit-startup-screen t)
(setq initial-scratch-message nil)

(setq-default indent-tabs-mode nil)
(setq require-final-newline t)

(scroll-bar-mode -1)
(tool-bar-mode -1)

(setq visible-bell t)

(add-hook 'prog-mode-hook 'display-line-numbers-mode)

(setq global-auto-revert-non-file-buffers t)
(global-auto-revert-mode)

(add-hook 'before-save-hook 'delete-trailing-whitespace)

(add-hook 'focus-out-hook (lambda () (save-some-buffers t)))

(load "package.init")

(use-package exec-path-from-shell
  :when (or (daemonp) (memq window-system '(mac ns x)))
  :config (exec-path-from-shell-initialize))

(load "theme.init")

(use-package ace-window
  :custom
  (aw-keys '(?a ?s ?d ?f ?g ?h ?j ?k ?l))
  (aw-scope 'frame)
  :bind
  (("M-o" . ace-window)))

(use-package magit
  :bind
  (("C-c g" . magit-file-dispatch)))

(use-package projectile
  :demand
  :custom
  (projectile-switch-project-action 'projectile-dired)
  :config
  (projectile-mode 1)
  :bind
  (:map projectile-mode-map
        ("C-c p" . projectile-command-map)))

(use-package vertico
  :config
  (vertico-mode))

(use-package savehist
  :config
  (savehist-mode))

(use-package orderless
  :custom
  (completion-styles '(orderless)))

(use-package markdown-mode)
