(use-package modus-themes
  :init
  (setq modus-themes-bold-constructs t
        modus-themes-italic-constructs t
        modus-themes-links '(italic background)
        modus-themes-prompts '(background bold)
        modus-themes-mode-line '(3d accented)
        modus-themes-tabs-accented t
        modus-themes-completions '((matches . (extrabold background intense))
                                   (selection . (semibold accented intense))
                                   (popup . (accented)))
        modus-themes-lang-checkers nil
        modus-themes-subtle-line-numbers t
        modus-themes-markup '(background intense)
        modus-themes-paren-match '(bold intense)
        modus-themes-region '(no-extend)
        modus-themes-org-blocks 'gray-background
        modus-themes-org-agenda '((header-block . (1.5))
                                  (header-date . (bold-today 1.2))
                                  (event . (accented italic varied))
                                  (scheduled . rainbow)
                                  (habit . traffic-light))
        modus-themes-headings '((1 . (background overline 1.3))
                                (2 . (overline rainbow 1.1))
                                (3 . (overline))
                                (4 . (monochrome)))))

(defun my/load-light-theme ()
  (modus-themes-load-operandi))

(defun my/load-dark-theme ()
  (modus-themes-load-vivendi))

(defun my/apply-theme (appearance)
  (mapc #'disable-theme custom-enabled-themes)
  (pcase appearance
    ('light (my/load-light-theme))
    ('dark (my/load-dark-theme))))

(add-hook 'ns-system-appearance-change-functions #'my/apply-theme)
